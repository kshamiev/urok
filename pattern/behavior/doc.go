// Паттерны поведения
//
// Суть таких паттернов заключается в следующем:
// Тип реализует какой-либо абстрактный интерфейс поведения (команда, интерпритатор, итератор ....)
// И в своей реализации работает с к.типом.
// Таким образом закрывая к. реализацию за а. операцией поведения
// Это позволяет абстрагировать связи между бизнес моделями реализующие задачи в различной предметной области
// Комбинируются такие паттерны с композицией с делегированием.
//
// Дискуссия:
// Возможно тип поведения должен принимать к. тип также через объединяющий интерфейс.
// Чтобы не плодить на каждый к. тип свой тип поведения ?
//
// Еще одно определение таких паттернов:
// Все паттерны данного вида реализуются через привязку к свойствам обсуживаемого объекта.
// Паттерн как правило должен удовлетворять нужному интерфейсу (наблюдатель, визитер и т. д.)
// Он принимает в себя обслуживаемый объект и производит необходимую операцию наблюдения
package behavior
